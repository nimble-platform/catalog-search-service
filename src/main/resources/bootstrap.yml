server:
  port: ${PORT:8090}
spring:
  application:
    # the name of the application represents the global identifier of this microservice.
    name: catalog-search-service
  cloud:
    config:
      uri: ${CONFIG_SERVER_URI:http://localhost:8888}
      # failFast is disabled per default, so that the service can start standalone without config server.
      # failFast should be enabled in production environments.
      # it can be set via an environment variable or the config server
      failFast: ${CONFIG_SERVER_FAILFAST:false}
    discovery:
      # by disabling the service discovery the application/service can be started in "standalone mode".
      # service discovery is disabled by default and should be enabled (set to true) for the "cloud mode".
      # it can be set via an environment variable or the config server
      enabled: ${discovery.enabled:${DISCOVERY_ENABLED:false}}
logstash:
  uri: ${LOGSTASH_URI:localhost:5000}

management:
  health:
    solr:
      enabled: false


nimble:
  identity:
    url: ${IDENTITY_SERVICE_URL:http://nimble-staging.salzburgresearch.at/identity}
  shared:
    property:
      indexingserviceuri: ${INDEXING_SERVICE_URI:http://nimble-dev.ikap.biba.uni-bremen.de:9101/}
      catalogue:
        search:
          configuration: ${CATALOG_SEARCH_CONFIG:/resources/sqpConfiguration-default.xml}

---

spring:
  profiles: productive


nimble:
  identity:
    url: ${IDENTITY_SERVICE_URL:http://nimble-staging.salzburgresearch.at/identity}
  shared:
    property:
      indexingserviceuri: ${INDEXING_SERVICE_URI:http://nimble-staging.salzburgresearch.at/index/}
      catalogue:
        search:
          configuration: ${CATALOG_SEARCH_CONFIG:/resources/sqpConfiguration-default.xml}
